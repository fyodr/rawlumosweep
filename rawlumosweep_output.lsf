################################################################################
# rawlumosweep_output.lsf
# by Ted Morin
#
# define output_header and the write_output function for rawlumosweep
#
# outputs are more or less self-explanatory - see output_header definition
# units are SI unless otherwise specified
#
# (please keep in mind that all scripts share a namespace in lumerical)
################################################################################
format long;

output_header = "lambda,";
output_header = output_header + "wg_material,";
output_header = output_header + "n_waveguide_real,n_waveguide_imag,";
output_header = output_header + "cladding_material,";
output_header = output_header + "n_cladding_real,n_cladding_imag,";
output_header = output_header + "substrate_material,";
output_header = output_header + "n_substrate_real,n_substrate_imag,";
output_header = output_header + "wg_width,wg_height,etch_depth,";
output_header = output_header + "bend_radius,curvature,";
output_header = output_header + "sim_height,sim_width,sim_dy,sim_dx,";
output_header = output_header + "mesh_fine_width,mesh_fine_height,";
output_header = output_header + "mesh_fine_dy,mesh_fine_dx,";
output_header = output_header + "mode_num,num_modes_found,frequency,";
output_header = output_header + "neff_lin_real,neff_lin_imag,loss(dB/cm),";
output_header = output_header + "neff_ang_real,neff_ang_imag,";
output_header = output_header + "ng_lin_real,ng_lin_imag,";
output_header = output_header + "te_pol_frac,is_te_mode,mode_pol_num,";
output_header = output_header + "effective_area,";
output_header = output_header + "timestamp";

function write_output(output_fn,output_header,inp, outp) {
    outtext = replacestring(output_header,"lambda",num2str(inp.lambda));

    # material details
    outtext = replacestring(outtext,"wg_material",inp.wg_material);
    outtext = replacestring(outtext,"cladding_material",inp.cladding_material);
    outtext = replacestring(outtext,"substrate_material",inp.substrate_material);
    outtext = replacestring(outtext,"n_waveguide_real",num2str(real(outp.n_waveguide)));
    outtext = replacestring(outtext,"n_waveguide_imag",num2str(imag(outp.n_waveguide)));
    outtext = replacestring(outtext,"n_cladding_real",num2str(real(outp.n_cladding)));
    outtext = replacestring(outtext,"n_cladding_imag",num2str(imag(outp.n_cladding)));
    outtext = replacestring(outtext,"n_substrate_real",num2str(real(outp.n_substrate)));
    outtext = replacestring(outtext,"n_substrate_imag",num2str(imag(outp.n_substrate)));

    # geometry details
    outtext = replacestring(outtext,"wg_width",num2str(inp.wg_width));
    outtext = replacestring(outtext,"wg_height",num2str(inp.wg_height));
    outtext = replacestring(outtext,"bend_radius",num2str(inp.bend_radius));
    outtext = replacestring(outtext,"curvature",num2str(1.0/inp.bend_radius));
    outtext = replacestring(outtext,"etch_depth",num2str(inp.etch_depth));

    # simulation details
    outtext = replacestring(outtext,"sim_height",num2str(inp.sim_height));
    outtext = replacestring(outtext,"sim_width",num2str(inp.sim_width));
    outtext = replacestring(outtext,"sim_dy",num2str(inp.sim_dy));
    outtext = replacestring(outtext,"sim_dx",num2str(inp.sim_dx));
    outtext = replacestring(outtext,"mesh_fine_width",num2str(inp.mesh_fine_width));
    outtext = replacestring(outtext,"mesh_fine_height",num2str(inp.mesh_fine_height));
    outtext = replacestring(outtext,"mesh_fine_dy",num2str(inp.mesh_fine_dy));
    outtext = replacestring(outtext,"mesh_fine_dx",num2str(inp.mesh_fine_dx));

    outtext = replacestring(outtext,"mode_num",num2str(outp.mode_num));
    outtext = replacestring(outtext,"frequency",num2str(outp.frequency));
    outtext = replacestring(outtext,"loss(dB/cm)",num2str(outp.loss));

    outtext = replacestring(outtext,"neff_lin_real",num2str(real(outp.neff)));
    outtext = replacestring(outtext,"neff_lin_imag",num2str(imag(outp.neff)));
    outtext = replacestring(outtext,"ng_lin_real",num2str(real(outp.ng)));
    outtext = replacestring(outtext,"ng_lin_imag",num2str(imag(outp.ng)));

    outtext = replacestring(outtext,"te_pol_frac",num2str(outp.te_pol_frac));
    outtext = replacestring(outtext,"is_te_mode",num2str(outp.is_te_mode));
    outtext = replacestring(outtext,"mode_pol_num",num2str(outp.mode_pol_num));

    outtext = replacestring(outtext,"effective_area",num2str(outp.effective_area));
    outtext = replacestring(outtext,"neff_ang_real",num2str(real(outp.neff_ang)));
    outtext = replacestring(outtext,"neff_ang_imag",num2str(imag(outp.neff_ang)));
    outtext = replacestring(outtext,"num_modes_found",num2str(outp.num_modes_found));

    outtext = replacestring(outtext,"timestamp",num2str(now()));
    write(output_fn, outtext);
}
