################################################################################
# rawlumosweep_inputs.lsf.example
# by Ted Morin
#
# set all input values for lumosweep
#
# details of inputs - TODO
#
# rawlumosweep_intputs.lsf is not tracked by git because it must be changed for
# every different run. rawlumosweep_inputs.lsf.example serves as a template.
#
# (please keep in mind that all scripts share a namespace in lumerical)
################################################################################
output_filename = "rawlumosweep_example_output.csv";

inp = struct;

#Do you want to visually check the modes during the sweep 1=yes 0=no
inp.visually_check = 1;

inp.all_geometry_length = 20; # does not matter

##########################################
#lambda = 1550e-9; # SI #set in sweep
##########################################
inp.target_mode_num = 1; # 1=highest effective index
inp.number_of_test_modes = 5;

inp.wg_material = "Si3N4 (Silicon Nitride) - Kischkat";
inp.cladding_material = "SiO2 (Glass) - Palik";
inp.substrate_material = "SiO2 (Glass) - Palik";

inp.etch_depth = 0.0e-6; # wg_height + 6*sim_dy; #SI
##########################################
#wg_height = 80.0e-9; #SI # now sweepable!
##########################################
inp.sim_width = 3e-6;  # 5*wg_width_i; #SI
inp.sim_height = 2e-6;  # 3*wg_width_i; #SI
inp.substrate_width = inp.sim_width*1.5; #SI (infinite, not recorded)
inp.substrate_height = inp.sim_height*1.5; #SI (infinite, not recorded)
inp.cladding_width = inp.sim_width*1.5; #SI (infinite, not recorded)
inp.cladding_height = inp.sim_height*1.5; #SI (infinite, not recorded)
inp.sim_dx = 20e-9; #SI
inp.sim_dy = 20e-9; #SI
inp.mesh_fine_width = 1.55e-6; #wg_width_f + 6*sim_dx; #SI
inp.mesh_fine_height = 0.3e-6; # wg_height + 6*sim_dy; #SI
inp.mesh_fine_dx = 10e-9; #SI
inp.mesh_fine_dy = 10e-9; #SI

################################################################################
## Sweepable Parameters

lambda_i = 1540e-9;
lambda_f = 1560e-9;
lambda_num_steps = 2;
wg_width_i = 0.400e-6; #SI # always check simulation dimensions before running!
wg_width_f = 1.500e-6; #SI
wg_width_num_steps = 2;
bend_radius_i = 200e-6; #SI
bend_radius_f = 700e-6; #SI
bend_radius_num_steps = 2;
wg_height_i = 0.020e-6;
wg_height_f = 0.180e-6;
wg_height_num_steps = 2;
etch_depth_i = 0.200e-6;
etch_depth_f = 0.200e-6;
etch_depth_num_steps = 1;
sidewall_angle_i = 90;
sidewall_angle_f = 90;
sidewall_angle_num_steps = 1;

################################################################################
## convert sweepable parameters to vectors

total_num_steps = 1;
total_num_steps = total_num_steps * lambda_num_steps;
total_num_steps = total_num_steps * wg_width_num_steps;
total_num_steps = total_num_steps * wg_height_num_steps;
total_num_steps = total_num_steps * bend_radius_num_steps;
total_num_steps = total_num_steps * etch_depth_num_steps;
total_num_steps = total_num_steps * sidewall_angle_num_steps;

lambdas_ = linspace(lambda_i, lambda_f, lambda_num_steps);
wg_widths_ = linspace(wg_width_i, wg_width_f, wg_width_num_steps);
wg_heights_ = linspace(wg_height_i, wg_height_f, wg_height_num_steps);
bend_radii_ = linspace(bend_radius_i, bend_radius_f, bend_radius_num_steps);
etch_depths_ = linspace(etch_depth_i, etch_depth_f, etch_depth_num_steps);
sidewall_angles_ = linspace(sidewall_angle_i, sidewall_angle_f, sidewall_angle_num_steps);

lambdas = zeros(total_num_steps);
wg_widths = zeros(total_num_steps);
wg_heights = zeros(total_num_steps);
bend_radii = zeros(total_num_steps);
etch_depths = zeros(total_num_steps);
sidewall_angles = zeros(total_num_steps);

ix = 0;
for (i1 = lambdas_) {
for (i2 = wg_widths_) {
for (i3 = wg_heights_) {
for (i4 = bend_radii_) {
for (i5 = etch_depths_) {
for (i6 = sidewall_angles_) {
    ix = ix + 1;
    lambdas(ix) = i1;
    wg_widths(ix) = i2;
    wg_heights(ix) = i3;
    bend_radii(ix) = i4;
    etch_depths(ix) = i5;
    sidewall_angles(ix) = i6;
}}}}}} # remember to add more braces if you add more sweep parameters


